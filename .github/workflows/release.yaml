name: App build

on:
  push:
    branches: [ "main" ]

jobs:
  build_with_signing:
    name: Build and Create Release App
    runs-on: macos-13
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.P12_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APPPASS: ${{ secrets.APPLE_APPPASS }}
        run: bash Pkg/storeAppleCredencials.sh

      - name: xcodegen
        uses: xavierLowmiller/xcodegen-action@1.1.2

      - name: Get Release body and Version
        run: | 
          VERSION=$(awk -F'\"' '/CFBundleShortVersionString/{print $2}' project.yml)

          echo "VERSION<<EOF" >> $GITHUB_ENV
          echo "$VERSION" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          RELEASEBODY=$(awk -v version="$VERSION" '$0~version{flag=1;next}/^[[:space:]]*$/{flag=0}flag' CHANGELOG.md)

          echo "RELEASE_BODY<<EOF" >> $GITHUB_ENV
          echo "$RELEASEBODY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
  
      - name: Build Release ${{ env.VERSION }}
        run: bash Pkg/createPackage.sh
        env:
          VERSION: ${{ env.VERSION }}
          FIREBASE_PLIST: ${{ secrets.FIREBASE_PLIST }}

      - name: Create Release for ${{ env.VERSION }}
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_BODY: ${{ env.RELEASE_BODY }}
          VERSION: ${{ env.VERSION }}
        with: 
          tag: ${{ env.VERSION }}
          artifacts: "*.dmg"
          body: ${{ env.RELEASE_BODY }}
          draft: false
          prerelease: false
